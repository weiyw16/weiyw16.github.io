<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quick Start on Open VSP data</title>
    <link>https://weiyw16.github.io/en/quick-start/</link>
    <description>Recent content in Quick Start on Open VSP data</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 04 Apr 2023 18:28:49 +0800</lastBuildDate><atom:link href="https://weiyw16.github.io/en/quick-start/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic IO</title>
      <link>https://weiyw16.github.io/en/quick-start/basic/</link>
      <pubDate>Tue, 04 Apr 2023 18:11:37 +0800</pubDate>
      
      <guid>https://weiyw16.github.io/en/quick-start/basic/</guid>
      <description>1. read and write binary We use struct(a python package) to read binary data.
#!/usr/bin/env python # coding: utf-8 import numpy as np import os import struct def readin_bin(path=None, seek_num=None, nt=None, nr=None): FA = open(path, &amp;#34;rb&amp;#34;) FA.seek(seek_num) # skip N bit to start reading in data out_data = np.empty((nt,nr)) for rr in range(nr): for tt in range(nt): data = FA.read(4) # read 4 bit float data_float = struct.unpack(&amp;#34;f&amp;#34;, data)[0] out_data[tt][rr] = data_float return out_data def writeout_bin(path=None, in_data=None, seek_num=None, nt=None, nr=None): FA = open(path, &amp;#34;wb&amp;#34;) for rr in range(nr): for tt in range(nt): data = in_data[tt][rr] #FA.</description>
    </item>
    
    <item>
      <title>Pre-processing</title>
      <link>https://weiyw16.github.io/en/quick-start/norm/</link>
      <pubDate>Tue, 04 Apr 2023 18:28:49 +0800</pubDate>
      
      <guid>https://weiyw16.github.io/en/quick-start/norm/</guid>
      <description>Example Four basic pre-processing tools are used when constructing norm synthetic seismic data from raw simulated data. These four steps are:
re-sample time power window normalization In a partial Madagascar Sconstruct example as what shown in the following codeblock, sfbandpass, sfwindow are used for re-sampling, where sfbandpass are applied before down-sampling to avoid aliasing.
Then, sfpow is used for amplitude balance along the time axis, where attenuation caused by geometry spreading would be alleviated.</description>
    </item>
    
  </channel>
</rss>
